source('C:/Grinnell/Git/locations/Init.R')
system( "cmd.exe",
input=paste('Sys.getenv("R_HOME"), "/bin/i386/Rgui.exe" Locations.R'),
wait=FALSE, invisible=FALSE )
source('C:/Grinnell/Git/locations/Init.R')
Sys.getenv("R_HOME")
source('C:/Grinnell/Git/locations/Init.R')
source('C:/Grinnell/Git/locations/Locations.R')
# Make packages available
UsePackages( pkgs=c("tidyverse", "RODBC", "sp", "rgdal", "rgeos", "raster",
"sf") )
?sf
areas
mapview
?mapview
require(mapview)
?mapview
names(shapes)
?ggmap
install.packages("ggmap")
?ggmap
require(ggmap)
?ggmap
?extent
# Convert polygons to a spatial object
sectionsSF <- shapes$secAllSPDF %>%
st_as_sf( coords=c("Longitude", "Latitude"), crs=4326 ) #%>%
# Make packages available
UsePackages( pkgs=c("tidyverse", "RODBC", "sp", "rgdal", "rgeos", "raster",
"sf", "rnaturalearth", "rnaturalearthdata") )
# World shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
world
?coord_sf
?ne_countries
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
?over
# Determine extent: points
extPts <- extent( ptsSub )
?bind_rows
?geom_sf
?geom_point
?scale_fill_discrete
?scale_fill_manual
source('C:/Grinnell/Git/locations/Locations.R')
outDir %in% list.files()
outDir <- "Maps"
outDir %in% list.files()
file.remove
?file.remove
outDir %in% list.files()
file.remove(outDir)
file.remove(outDir, recursive=TRUE)
unlink(outDir)
unlink(outDir, recursive=TRUE)
file.create( outDir )
dir.create( outDir )
source('C:/Grinnell/Git/locations/Locations.R')
unique(areasSF$Section)[5]
?ggmap
?get_map
?formatC
?geom_sf
